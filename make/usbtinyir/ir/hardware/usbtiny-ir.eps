%!PS-Adobe-3.0 EPSF-3.0
%%Creator: gEDA gschem 1.5.4-20090830-20-g3fd5033
%%CreationDate: Thu Sep 30 22:50:06 2010
%%Title: /home/atommann/www/make/usbtinyir/ir/hardware/usbtiny-ir.sch
%%Author: (null)
%%BoundingBox: 0 0 1058 494
%%Orientation: Portrait
%%Pages: 1
%%Endcomments
%%BeginProlog
% Prolog for gEDA, define all the functions needed for rendering
% schematics on Postscript devices


% Draw a line from the second coordinate to the first
% x2 y2 x1 y1 width line -
/line {
    setlinewidth
    % pop off first element and moveto
    moveto
    % pop off remaining elements and draw a line segment
    lineto
    % draw it
    stroke
} bind def


% Draw a dot
% x y r dot -
/dot {
    0 360 arc fill
} bind def

% Draw a dot-dashed line, a bunch of lined segments,
% if the array element only has length two, draw a dot.
% [ [x2 y2 x1 y1] [x4 y4 x3 y3] [x5 y5] ... ] width dashed -
/width 0 def
/dashed {
    dup 2.0 div /width exch def
    setlinewidth
    % pop off each line segment and draw it as a dot or as a line
    {
	aload length 2 gt
	{ moveto lineto stroke}
	{ width dot } ifelse
    } forall
} bind def

% Draw an arc segment
% x y r ang1 ang2 width darc -
/darc {
    setlinewidth
    arc stroke
} bind def

% Draw a series of arc segment bits, if the array element only has a single
% element in it, draw a dot.
% [ [sa1 ea1] [sa2 ea2] ... ] x y r width dashedarc -
/x 0 def
/y 0 def
/dashedarc {
    dup /width exch def
    setlinewidth
    /r exch def  
    /y exch def
    /x exch def
    { aload length 1 gt
	{
	    % this element had two angles in it
	    % extract start and stop angles
	    x y r   % drop x y and r onto stack
		    % at this point we have: sa ea x y r
		    % we need                      x y r sa ea
		    % so..
	    5 -2 roll
	    % and add it to the current path, and draw it
	    arc stroke
	} {
	    % this element only had one angle in it, place a
	    % filled dot at the appropriate place
	    % compute center point of the arc using the angle
	    % that is on the top of the stack
	    dup   		% angle angle
	    cos r mul x add 	% angle x
	    exch		% x angle
	    sin r mul y add	% x y
	    width		% x y width/2
	    dot			% draw the dot
	} ifelse
    } forall

    % Now draw it
    stroke
} bind def

% Draw a box
% width height x y linethickness box -
/box {
    setlinewidth
    moveto
    exch dup 0 rlineto	 % w h, h w w 0      -- Draw bottom line
    exch 0 exch rlineto	 % h w, w h 0, w 0 h -- Draw right line 
    neg 0 rlineto	 % w, -w 0           -- Draw Top line
    closepath		 % finish and draw it
    stroke
} bind def			     

% Draw a filled box
% width height x y fbox -
/fbox {
    moveto
    exch dup 0 rlineto	
    exch 0 exch rlineto	
    neg 0 rlineto		
    closepath			
    fill			
} bind def

% Font reincoding utilities

% ISOLatin1Encoding, extended with remaining uncoded glyphs
/ISOLatin1Extended [
    /.notdef /Lslash /lslash /OE /oe /Scaron /scaron /Zcaron /zcaron
    /Ydieresis /trademark /bullet /dagger /daggerdbl /ellipsis /emdash
    /endash /fi /fl /florin /fraction /guilsinglleft /guilsinglright
    /perthousand /quotedblbase /quotedblleft /quotedblright
    /quotesinglbase /quotesingle /.notdef /.notdef /.notdef /space
    /exclam /quotedbl /numbersign /dollar /percent /ampersand
    /quoteright /parenleft /parenright /asterisk /plus /comma /minus
    /period /slash /zero /one /two /three /four /five /six /seven /eight
    /nine /colon /semicolon /less /equal /greater /question /at /A /B /C
    /D /E /F /G /H /I /J /K /L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z
    /bracketleft /backslash /bracketright /asciicircum /underscore
    /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o /p /q /r /s
    /t /u /v /w /x /y /z /braceleft /bar /braceright /asciitilde
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /.notdef /.notdef /.notdef /dotlessi /grave /acute /circumflex
    /tilde /macron /breve /dotaccent /dieresis /.notdef /ring /cedilla
    /.notdef /hungarumlaut /ogonek /caron /space /exclamdown /cent
    /sterling /currency /yen /brokenbar /section /dieresis /copyright
    /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron
    /degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph
    /periodcentered /cedilla /onesuperior /ordmasculine /guillemotright
    /onequarter /onehalf /threequarters /questiondown /Agrave /Aacute
    /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla /Egrave /Eacute
    /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis /Eth
    /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
    /Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn
    /germandbls /agrave /aacute /acircumflex /atilde /adieresis /aring
    /ae /ccedilla /egrave /eacute /ecircumflex /edieresis /igrave
    /iacute /icircumflex /idieresis /eth /ntilde /ograve /oacute
    /ocircumflex /otilde /odieresis /divide /oslash /ugrave /uacute
    /ucircumflex /udieresis /yacute /thorn /ydieresis
] def

% `new-font-name' `encoding-vector' `old-font-name' RE -
/RE {
    findfont
    dup maxlength dict begin {
        1 index /FID ne { def } { pop pop } ifelse
    } forall
    /Encoding exch def
    dup /FontName exch def
    currentdict end definefont pop
} bind def

% Text handling functions, select the font and scale it, then we need
% only to apply the appropriate transformations to get the text
% justified into the right spots.  The bad thing here is that we don't
% do any kerning, so the output may look a bit strange.

% compute the height of one character and return lly and ury
% (char) charheight lly ury
/charheight {
    gsave			% push graphics state
	newpath			% clear current path
	0 0 moveto		% Set current point
	false charpath		% get path
	flattenpath		% flatten path
	pathbbox		% stack = llx lly urx ury
	exch pop		% stack = llx lly ury
	3 -1 roll pop		% stack = lly ury
    grestore			% pop graphics state
} bind def

% compute the height of a string, one character at a time
% (string) stringheight lly ury
/lly 0.0 def
/ury 0.0 def

/stringheight {
    /lly 0.0 def			% initial value of heightmin
    /ury 0.0 def			% initial value of heightmax
    {				% work through string
	( ) dup 0 4 -1 roll put	% create one character string
	charheight		% measure it's height
	dup ury gt {		% if ury gt heightmax
	    /ury exch def	% update with new value
	} {
	    pop			% else discard ury
	} ifelse
	dup lly lt {		% if lly lt heightmin
	    /lly exch def	% update with new value
	} {
	    pop			% else discard lly
	} ifelse
    } forall
    lly ury			% Return the results
} bind def

% calculate the string width taking into account the escapes.
/mystrx 0.0 def
/mystry 0.0 def
/mystresc false def

/mystringwidth {
    /mystrx 0.0 def
    /mystry 0.0 def
    /mystresc false def
    {				% work through string
	% did we process the escape character last?
	mystresc {
	    % last character was escape
	    % handle the escape
	    % is it an _ = 95?
	    dup 95 eq {
		pop  % we don't need the character anymore
		% toggle drawing overbars
		0.0 0.0 % make it like it never happened...
	    } {
		% otherwise measure the character 
		(\\ ) dup 1 4 -1 roll put % count a \ and the character
		stringwidth
	    } ifelse
	    % and reset the flag
	    /mystresc false def
	} {
	    % last character was not escape
	    % is this escape
	    dup 92 eq {
		% yes, escape character, set flag
		/mystresc true def
		pop % drop character
		0.0 0.0 % make like this character has no width and height
	    } {
		( ) dup 0 4 -1 roll put	% create one character string
		stringwidth		% measure it's height/width
	    } ifelse
	} ifelse
	% accumulate x and y movements
	mystry add /mystry exch def
	mystrx add /mystrx exch def
    } forall
    mystrx mystry % drop results on stack
} bind def

% Render a string with overbars
%
/escaped false def
/drawoverbar false def
/fontsize 0.0 def

%string1 string2 append -
/append {
    2 copy length exch length add % find new length
    string dup % string1 string2 string string
    4 2 roll % string string string1 string2
    2 index 0 3 index
    % string string string1 string2 string 0 string1
    putinterval % string string string1 string2
    exch length exch putinterval
} bind def

% If drawoverbar is set, draw a line of the same length as the given string
% string overbarshowline -
/overbarshowline {
    % print overbar if necessary
    stringwidth pop 0
    drawoverbar {
        rlineto
        gsave stroke grestore
    } {
        rmoveto
    } ifelse
} bind def

% Draws overbars for the given string, then shows the string itself
% string overbarshow
/overbarshow {
    /overbarshowacc () def
    /overbarshowtxt () def

    gsave
    fontsize 10.0 div setlinewidth
    0 fontsize rmoveto  % move to (0,overbarheight)

    {				% work through string
	escaped {
	    % the last character was the escape
	    % handle the escape
	    % is it an _ = 95?
	    dup 95 eq {
		pop  % we don't need the character anymore
                overbarshowacc overbarshowline
                % toggle drawing overbars
		/drawoverbar drawoverbar not def

                % Append the contents off the accumulator to the text
                % string we're eventually going to show
                /overbarshowtxt overbarshowtxt overbarshowacc append def

                % clear accumulator
                /overbarshowacc () def
	    } {
                % add to accumulator
                (\\ ) dup 1 4 -1 roll put
                overbarshowacc exch append
                /overbarshowacc exch def
	    } ifelse
	    % and reset the flag
	    /escaped false def
	} {
	    % check for escape character \ = 92
	    dup 92 eq {
		% yes, escape character, set flag
		/escaped true def
		pop % drop character
	    } {
                % add to accumulator
                ( ) dup 0 4 -1 roll put
                overbarshowacc exch append
                /overbarshowacc exch def
	    } ifelse
	} ifelse
    } forall
    % Catch any leftovers
    overbarshowacc overbarshowline
    overbarshowtxt overbarshowacc append

    grestore
    show
} bind def

% 
% hcenter rjustify vcenter vjustify spacing [(line1) (line2) ... ] rot x y size text -
/stringw 0.0 def
/stringh 0.0 def
/spacing 0.0 def
/strings [ ] def
/stringtxt ( ) def
/stringcount 0 def
/rot 0.0 def

/text {
    gsave	        % save state for later
    /drawoverbar false def      % start by not drawing overbars

    dup /fontsize exch def  % save font size for corrections later
    % do font selection 
    /gEDAFont findfont
    exch scalefont
    setfont

    % set up coordinates
    translate           % move origin to given point
    rotate		% rotate so that text is drawn
    0 0 moveto
    dup length /stringcount exch def			% Get number of strings
    /strings exch def     				% save strings
    /spacing exch def
    % do we have more than 1 string to render?
    stringcount 1 eq {
	/stringtxt strings aload pop def		% get the string 
	/stringw stringtxt mystringwidth pop neg def	% get the -width
	/stringh stringtxt stringheight exch pop neg def% get the -height

	% First do vertical calculations
	% hcenter rjustify vcenter vjustify 
	% vertical justification
	{ 0 stringh rmoveto } if 
	% vertical center
	{ 0 stringh 0.3571425 mul rmoveto } if  % not 0.5, so that
						% it looks nicer
	% Then do horizontal calculations
	% right justify
	{ stringw 0 rmoveto } if
	% center
	{ stringw 2.0 div 0 rmoveto } if
	% Draw the text
	stringtxt overbarshow
    } {
	% More than one line, compute bounding box for the text

	% vertical height, don't use the actual hieght of the characters
	% assume that the user wants to make the baselines line up with two
	% text boxes placed side by side
	/stringh stringcount spacing mul neg def
	% Now figure out horizontal size, this amounts to keeping track
	% of the longest string
	/stringw 0.0 def
	strings {
	    mystringwidth pop
	    dup stringw gt {
		/stringw exch def
	    } {
		pop
	    } ifelse
	} forall
	/stringw stringw neg def 	% get the -width
	
	% First do vertical calculations
	% hcenter rjustify vcenter vjustify 
	% vertical justification
	{ 0 stringh fontsize add rmoveto } if 
	% vertical center
	{ 0 stringh 0.5 mul rmoveto } if 
	% Then do horizontal calculations
	% right justify
	{ stringw 0 rmoveto } if
	% center
	{ stringw 2.0 div 0 rmoveto } if
	% now move up to the first line and begin rendering
	0 stringcount 1 sub spacing mul rmoveto
	strings {
	    gsave		% Save starting point
	    overbarshow		% render the text
	    grestore
	    0 spacing neg rmoveto
	} forall
    } ifelse
    grestore 	% Restore old state
} bind def


%%EndProlog
%%Page: 1 1
/gEDAFont ISOLatin1Extended /Helvetica RE
2 setlinecap
0.072000 0.072000 scale
0 0 translate
1.000000 1.000000 scale
-53400 -57398 translate
gsave
62100 60800 61800 60800 10 line
gsave
false false false false 208.000000 [(13) ] 0 61900 60850 144.444443 text
grestore
gsave
false true false false 208.000000 [(\(AIN1/PCINT1\) PB1) ] 0 61750 60800 144.444443 text
grestore
62100 61100 61800 61100 10 line
gsave
false false false false 208.000000 [(14) ] 0 61900 61150 144.444443 text
grestore
gsave
false true false false 208.000000 [(\(OC0A/PCINT2\) PB2) ] 0 61750 61100 144.444443 text
grestore
62100 61400 61800 61400 10 line
gsave
false false false false 208.000000 [(15) ] 0 61900 61450 144.444443 text
grestore
gsave
false true false false 208.000000 [(\(OC1A/PCINT3\) PB3) ] 0 61750 61400 144.444443 text
grestore
62100 61700 61800 61700 10 line
gsave
false false false false 208.000000 [(16) ] 0 61900 61750 144.444443 text
grestore
gsave
false true false false 208.000000 [(\(OC1B/PCINT4\) PB4) ] 0 61750 61700 144.444443 text
grestore
62100 62000 61800 62000 10 line
gsave
false false false false 208.000000 [(17) ] 0 61900 62050 144.444443 text
grestore
gsave
false true false false 208.000000 [(\(MOSI/DI/SDA/PCINT5\) PB5) ] 0 61750 62000 144.444443 text
grestore
62100 62300 61800 62300 10 line
gsave
false false false false 208.000000 [(18) ] 0 61900 62350 144.444443 text
grestore
gsave
false true false false 208.000000 [(\(MISO/DO/PCINT6\) PB6) ] 0 61750 62300 144.444443 text
grestore
62100 62600 61800 62600 10 line
gsave
false false false false 208.000000 [(19) ] 0 61900 62650 144.444443 text
grestore
gsave
false true false false 208.000000 [(\(UCSK/SCK/PCINT7\) PB7) ] 0 61750 62600 144.444443 text
grestore
58000 62900 58300 62900 10 line
gsave
false true false false 208.000000 [(1) ] 0 58200 62950 144.444443 text
grestore
gsave
false false false false 208.000000 [(PA2 \(_RESET_/dW\)) ] 0 58350 62900 144.444443 text
grestore
58000 62000 58300 62000 10 line
gsave
false true false false 208.000000 [(4) ] 0 58200 62050 144.444443 text
grestore
gsave
false false false false 208.000000 [(PA1 \(XTAL2\)) ] 0 58350 62000 144.444443 text
grestore
58000 61700 58300 61700 10 line
gsave
false true false false 208.000000 [(5) ] 0 58200 61750 144.444443 text
grestore
gsave
false false false false 208.000000 [(PA0 \(XTAL1\)) ] 0 58350 61700 144.444443 text
grestore
58000 62600 58300 62600 10 line
gsave
false true false false 208.000000 [(2) ] 0 58200 62650 144.444443 text
grestore
gsave
false false false false 208.000000 [(PD0 \(RXD\)) ] 0 58350 62600 144.444443 text
grestore
58000 62300 58300 62300 10 line
gsave
false true false false 208.000000 [(3) ] 0 58200 62350 144.444443 text
grestore
gsave
false false false false 208.000000 [(PD1 \(TXD\)) ] 0 58350 62300 144.444443 text
grestore
58000 61400 58300 61400 10 line
gsave
false true false false 208.000000 [(6) ] 0 58200 61450 144.444443 text
grestore
gsave
false false false false 208.000000 [(PD2 \(CKOUT/XCK/INT0\)) ] 0 58350 61400 144.444443 text
grestore
58000 61100 58300 61100 10 line
gsave
false true false false 208.000000 [(7) ] 0 58200 61150 144.444443 text
grestore
gsave
false false false false 208.000000 [(PD3 \(INT1\)) ] 0 58350 61100 144.444443 text
grestore
58000 60800 58300 60800 10 line
gsave
false true false false 208.000000 [(8) ] 0 58200 60850 144.444443 text
grestore
gsave
false false false false 208.000000 [(PD4 \(T0\)) ] 0 58350 60800 144.444443 text
grestore
58000 60500 58300 60500 10 line
gsave
false true false false 208.000000 [(9) ] 0 58200 60550 144.444443 text
grestore
gsave
false false false false 208.000000 [(PD5 \(OC0B/T1\)) ] 0 58350 60500 144.444443 text
grestore
58300 59900 61800 59900 10 line
61800 59900 61800 63200 10 line
61800 63200 58300 63200 10 line
58300 63200 58300 59900 10 line
gsave
false false false false 260.000000 [(ATtiny2313) ] 0 58300 63300 180.555557 text
grestore
62100 60500 61800 60500 10 line
gsave
false false false false 208.000000 [(12) ] 0 61900 60550 144.444443 text
grestore
gsave
false true false false 208.000000 [(\(AIN0/PCINT0\) PB0) ] 0 61750 60500 144.444443 text
grestore
62100 60200 61800 60200 10 line
gsave
false false false false 208.000000 [(11) ] 0 61900 60250 144.444443 text
grestore
gsave
false true false false 208.000000 [(\(ICP\) PD6) ] 0 61750 60200 144.444443 text
grestore
58000 60200 58300 60200 10 line
gsave
false true false false 208.000000 [(10) ] 0 58200 60250 144.444443 text
grestore
gsave
false false false false 208.000000 [(GND) ] 0 58350 60200 144.444443 text
grestore
62100 62900 61800 62900 10 line
gsave
false false false false 208.000000 [(20) ] 0 61900 62950 144.444443 text
grestore
gsave
false true false false 208.000000 [(VCC) ] 0 61750 62900 144.444443 text
grestore
grestore
gsave
false true false false 260.000000 [(U1) ] 0 61800 63300 180.555557 text
grestore
gsave
54900 60500 54600 60500 10 line
gsave
false false false false 208.000000 [(3) ] 0 54700 60550 144.444443 text
grestore
gsave
false true false false 208.000000 [(D+) ] 0 54550 60500 144.444443 text
grestore
54900 60800 54600 60800 10 line
gsave
false false false false 208.000000 [(2) ] 0 54700 60850 144.444443 text
grestore
gsave
false true false false 208.000000 [(D-) ] 0 54550 60800 144.444443 text
grestore
54900 61100 54600 61100 10 line
gsave
false false false false 208.000000 [(1) ] 0 54700 61150 144.444443 text
grestore
gsave
false true false false 208.000000 [(VCC) ] 0 54550 61100 144.444443 text
grestore
54900 60200 54600 60200 10 line
gsave
false false false false 208.000000 [(4) ] 0 54700 60250 144.444443 text
grestore
gsave
false true false false 208.000000 [(GND) ] 0 54550 60200 144.444443 text
grestore
53800 59700 53800 60000 10 line
gsave
false false false true 208.000000 [(5) ] 0 53850 59900 144.444443 text
grestore
gsave
true false false false 208.000000 [(CASE) ] 0 54000 60050 144.444443 text
grestore
53400 60000 54600 60000 10 line
54600 60000 54600 61300 10 line
54600 61300 53400 61300 10 line
53400 61300 53400 60000 10 line
gsave
true false true false 260.000000 [(USB_B) ] 0 53800 60700 180.555557 text
grestore
54200 59700 54200 60000 10 line
gsave
false false false true 208.000000 [(6) ] 0 54250 59900 144.444443 text
grestore
grestore
gsave
false false false true 260.000000 [(CONN1) ] 0 53400 61500 180.555557 text
grestore
gsave
57200 60900 57100 60700 10 line
57100 60700 57000 60900 10 line
57000 60900 56900 60700 10 line
56900 60700 56800 60900 10 line
57200 60900 57300 60700 10 line
57300 60700 57350 60800 10 line
57500 60800 57350 60800 10 line
56600 60800 56752 60800 10 line
56801 60900 56750 60800 10 line
grestore
gsave
false false false false 260.000000 [(R1) ] 0 56600 60500 180.555557 text
grestore
gsave
false false false false 260.000000 [(68) ] 0 57100 60500 180.555557 text
grestore
gsave
57200 61500 57100 61300 10 line
57100 61300 57000 61500 10 line
57000 61500 56900 61300 10 line
56900 61300 56800 61500 10 line
57200 61500 57300 61300 10 line
57300 61300 57350 61400 10 line
57500 61400 57350 61400 10 line
56600 61400 56752 61400 10 line
56801 61500 56750 61400 10 line
grestore
gsave
false false false false 260.000000 [(R2) ] 0 56600 61600 180.555557 text
grestore
gsave
false false false false 260.000000 [(68) ] 0 57100 61600 180.555557 text
grestore
gsave
57200 61200 57100 61000 10 line
57100 61000 57000 61200 10 line
57000 61200 56900 61000 10 line
56900 61000 56800 61200 10 line
57200 61200 57300 61000 10 line
57300 61000 57350 61100 10 line
57500 61100 57350 61100 10 line
56600 61100 56752 61100 10 line
56801 61200 56750 61100 10 line
grestore
gsave
false false false false 260.000000 [(R3) ] 0 56500 61200 180.555557 text
grestore
gsave
false false false false 260.000000 [(1K5) ] 0 57400 61200 180.555557 text
grestore
gsave
57300 60200 57500 60100 10 line
57500 60100 57300 60000 10 line
57300 60000 57500 59900 10 line
57500 59900 57300 59800 10 line
57300 60200 57500 60300 10 line
57500 60300 57400 60350 10 line
57400 60500 57400 60350 10 line
57400 59600 57400 59752 10 line
57300 59801 57400 59750 10 line
grestore
gsave
false false false false 260.000000 [(R4) ] 0 56900 60100 180.555557 text
grestore
gsave
false false false false 260.000000 [(330) ] 0 56900 59900 180.555557 text
grestore
gsave
63800 59000 63600 59100 10 line
63600 59100 63800 59200 10 line
63800 59200 63600 59300 10 line
63600 59300 63800 59400 10 line
63800 59000 63600 58900 10 line
63600 58900 63700 58850 10 line
63700 58700 63700 58850 10 line
63700 59600 63700 59448 10 line
63800 59399 63700 59450 10 line
grestore
gsave
false false false false 260.000000 [(R5) ] 0 63200 59200 180.555557 text
grestore
gsave
false false false false 260.000000 [(22K) ] 0 63200 59000 180.555557 text
grestore
gsave
54900 60000 54900 60200 10 line
54800 60000 55000 60000 10 line
54855 59950 54945 59950 10 line
54880 59910 54920 59910 10 line
grestore
58000 60800 57500 60800 10 line
56600 60800 54900 60800 10 line
58000 61100 57500 61100 10 line
56600 61100 56500 61100 10 line
56500 61100 56500 60800 10 line
58000 61400 57500 61400 10 line
56600 61400 55600 61400 10 line
55600 59600 55600 61400 10 line
55600 60500 54900 60500 10 line
gsave
56300 59000 56700 59000 10 line
56500 59300 56700 59000 10 line
56500 59300 56300 59000 10 line
56300 59300 56700 59300 10 line
56500 59600 56500 59400 10 line
56500 58900 56500 58700 10 line
56500 59400 56500 59300 10 line
56500 59000 56500 58900 10 line
56300 59300 56300 59200 10 line
56700 59300 56700 59400 10 line
newpath
56500 58700
25
0 360 arc
fill
newpath
56500 58700
25
0 360 arc
fill
grestore
gsave
false false false false 260.000000 [(Z2) ] 0 56800 59200 180.555557 text
grestore
gsave
false false false false 260.000000 [(3V6) ] 0 56800 59000 180.555557 text
grestore
gsave
55400 59000 55800 59000 10 line
55600 59300 55800 59000 10 line
55600 59300 55400 59000 10 line
55400 59300 55800 59300 10 line
55600 59600 55600 59400 10 line
55600 58900 55600 58700 10 line
55600 59400 55600 59300 10 line
55600 59000 55600 58900 10 line
55400 59300 55400 59200 10 line
55800 59300 55800 59400 10 line
grestore
gsave
false false false false 260.000000 [(Z1) ] 0 55900 59200 180.555557 text
grestore
gsave
false false false false 260.000000 [(3V6) ] 0 55900 59000 180.555557 text
grestore
56500 59600 56500 60800 10 line
gsave
56400 62100 56400 62300 10 line
56400 62600 56400 62800 10 line
56300 62350 56500 62350 10 line
56500 62350 56500 62550 10 line
56500 62550 56300 62550 10 line
56300 62550 56300 62350 10 line
56260 62300 56540 62300 10 line
56260 62600 56540 62600 10 line
newpath
56400 62100
25
0 360 arc
fill
newpath
56400 62100
25
0 360 arc
fill
newpath
56400 62800
25
0 360 arc
fill
newpath
56400 62800
25
0 360 arc
fill
grestore
gsave
false false false false 260.000000 [(U2) ] 0 56600 62500 180.555557 text
grestore
gsave
false false false false 260.000000 [(12MHz) ] 0 56600 62300 180.555557 text
grestore
gsave
55300 62800 55500 62800 10 line
56200 62800 56000 62800 10 line
55700 63000 55700 62600 10 line
55800 63000 55800 62600 10 line
56000 62800 55800 62800 10 line
55700 62800 55500 62800 10 line
grestore
gsave
false false false false 260.000000 [(C1) ] 0 55400 62900 180.555557 text
grestore
gsave
false false false false 260.000000 [(22pF) ] 0 55900 62900 180.555557 text
grestore
gsave
55300 62100 55500 62100 10 line
56200 62100 56000 62100 10 line
55700 62300 55700 61900 10 line
55800 62300 55800 61900 10 line
56000 62100 55800 62100 10 line
55700 62100 55500 62100 10 line
grestore
gsave
false false false false 260.000000 [(C2) ] 0 55400 61900 180.555557 text
grestore
gsave
false false false false 260.000000 [(22pF) ] 0 55900 61900 180.555557 text
grestore
56200 62100 57500 62100 10 line
56200 62800 57700 62800 10 line
gsave
55100 62500 55300 62500 10 line
55100 62600 55100 62400 10 line
55050 62545 55050 62455 10 line
55010 62520 55010 62480 10 line
newpath
55300 62500
25
0 360 arc
fill
newpath
55300 62500
25
0 360 arc
fill
grestore
58000 62000 57700 62000 10 line
57700 62000 57700 62800 10 line
gsave
57400 59600 57400 59400 10 line
57400 58700 57400 58900 10 line
57500 59200 57400 59100 10 line
57400 59100 57300 59200 10 line
57500 59200 57300 59200 10 line
57500 59100 57300 59100 10 line
57400 59100 57400 58900 10 line
57400 59200 57400 59400 10 line
57540 59170 57640 59070 10 line
57640 59070 57610 59120 10 line
57640 59070 57590 59100 10 line
57540 59100 57640 59000 10 line
57640 59000 57610 59050 10 line
57640 59000 57590 59030 10 line
grestore
gsave
false false false false 260.000000 [(D1) ] 0 57700 59200 180.555557 text
grestore
gsave
false false false false 260.000000 [(Green) ] 0 57700 59000 180.555557 text
grestore
58000 60500 57400 60500 10 line
gsave
58000 60000 58000 60200 10 line
57900 60000 58100 60000 10 line
57955 59950 58045 59950 10 line
57980 59910 58020 59910 10 line
grestore
gsave
62100 62900 62100 63100 10 line
61950 63100 62250 63100 10 line
gsave
false false false false 208.000000 [(Vcc) ] 0 61975 63150 144.444443 text
grestore
grestore
gsave
63700 58500 63700 58700 10 line
63600 58500 63800 58500 10 line
63655 58450 63745 58450 10 line
63680 58410 63720 58410 10 line
grestore
gsave
64800 58700 68100 58700 10 line
68100 58700 68100 64000 10 line
68100 64000 64800 64000 10 line
64800 64000 64800 58700 10 line
gsave
false false false false 208.000000 [(VSS \(GND\)) ] 0 64875 63500 144.444443 text
grestore
64800 63500 64500 63500 10 line
gsave
false false false false 208.000000 [(1) ] 0 64636 63550 144.444443 text
grestore
gsave
false false false false 208.000000 [(VDD \(VCC\)) ] 0 64875 63200 144.444443 text
grestore
64800 63200 64500 63200 10 line
gsave
false false false false 208.000000 [(2) ] 0 64596 63250 144.444443 text
grestore
gsave
false false false false 208.000000 [(V0) ] 0 64875 62900 144.444443 text
grestore
64800 62900 64500 62900 10 line
gsave
false false false false 208.000000 [(3) ] 0 64620 62950 144.444443 text
grestore
gsave
false false false false 208.000000 [(RS) ] 0 64875 62600 144.444443 text
grestore
64800 62600 64500 62600 10 line
gsave
false false false false 208.000000 [(4) ] 0 64596 62650 144.444443 text
grestore
gsave
false false false false 208.000000 [(R/\\_W\\_) ] 0 64875 62300 144.444443 text
grestore
64800 62300 64500 62300 10 line
gsave
false false false false 208.000000 [(5) ] 0 64620 62350 144.444443 text
grestore
gsave
false false false false 208.000000 [(E) ] 0 64875 62000 144.444443 text
grestore
64800 62000 64500 62000 10 line
gsave
false false false false 208.000000 [(6) ] 0 64604 62050 144.444443 text
grestore
gsave
false false false false 208.000000 [(DB0) ] 0 64850 61700 144.444443 text
grestore
64800 61700 64500 61700 10 line
gsave
false false false false 208.000000 [(7) ] 0 64620 61750 144.444443 text
grestore
gsave
false false false false 208.000000 [(DB1) ] 0 64850 61400 144.444443 text
grestore
64800 61400 64500 61400 10 line
gsave
false false false false 208.000000 [(8) ] 0 64612 61450 144.444443 text
grestore
gsave
false false false false 208.000000 [(DB2) ] 0 64850 61100 144.444443 text
grestore
64800 61100 64500 61100 10 line
gsave
false false false false 208.000000 [(9) ] 0 64596 61150 144.444443 text
grestore
gsave
false false false false 208.000000 [(DB3) ] 0 64850 60800 144.444443 text
grestore
64500 60800 64800 60800 10 line
gsave
false false false false 208.000000 [(10) ] 0 64600 60850 144.444443 text
grestore
gsave
false false false false 208.000000 [(DB4) ] 0 64850 60500 144.444443 text
grestore
64500 60500 64800 60500 10 line
gsave
false false false false 208.000000 [(11) ] 0 64600 60550 144.444443 text
grestore
gsave
false false false false 208.000000 [(DB5) ] 0 64850 60200 144.444443 text
grestore
64500 60200 64800 60200 10 line
gsave
false false false false 208.000000 [(12) ] 0 64600 60250 144.444443 text
grestore
gsave
false false false false 208.000000 [(DB6) ] 0 64850 59900 144.444443 text
grestore
64500 59900 64800 59900 10 line
gsave
false false false false 208.000000 [(13) ] 0 64600 59950 144.444443 text
grestore
gsave
false false false false 208.000000 [(DB7) ] 0 64850 59600 144.444443 text
grestore
64500 59600 64800 59600 10 line
gsave
false false false false 208.000000 [(14) ] 0 64600 59650 144.444443 text
grestore
gsave
false false false false 208.000000 [(A ) ] 0 64850 59300 144.444443 text
grestore
64500 59300 64800 59300 10 line
gsave
false false false false 208.000000 [(15) ] 0 64600 59350 144.444443 text
grestore
gsave
false false false false 208.000000 [(K) ] 0 64850 59000 144.444443 text
grestore
64500 59000 64800 59000 10 line
gsave
false false false false 208.000000 [(16) ] 0 64600 59050 144.444443 text
grestore
65800 58900 67900 58900 10 line
67900 58900 67900 63700 10 line
67900 63700 65800 63700 10 line
65800 63700 65800 58900 10 line
gsave
false false false false 390.000000 [(LCD) ] 0 66600 61500 270.833344 text
grestore
grestore
gsave
58300 57700 59400 57700 10 line
59400 57700 59400 59100 10 line
59400 59100 58300 59100 10 line
58300 59100 58300 57700 10 line
59700 58900 59400 58900 10 line
gsave
false false false false 260.000000 [(2) ] 0 59500 59000 180.555557 text
grestore
gsave
false false false false 260.000000 [(Vcc) ] 0 59000 58900 180.555557 text
grestore
59700 58400 59400 58400 10 line
gsave
false false false false 260.000000 [(3) ] 0 59500 58500 180.555557 text
grestore
gsave
false false false false 260.000000 [(Out) ] 0 59000 58400 180.555557 text
grestore
59700 57900 59400 57900 10 line
gsave
false false false false 260.000000 [(1) ] 0 59500 58000 180.555557 text
grestore
gsave
false false false false 260.000000 [(GND) ] 0 58900 57900 180.555557 text
grestore
58500 58800 58500 58500 10 line
58600 58500 58400 58500 10 line
58400 58500 58500 58300 10 line
58500 58300 58600 58500 10 line
58500 58300 58500 58000 10 line
58600 58300 58400 58300 10 line
58700 58800 58600 58600 10 line
58600 58600 58600 58700 10 line
58600 58600 58700 58700 10 line
58700 58500 58800 58700 10 line
58700 58500 58700 58600 10 line
58700 58500 58800 58600 10 line
grestore
gsave
false false false false 260.000000 [(U3) ] 0 58300 59200 180.555557 text
grestore
62300 59500 62300 60200 10 line
gsave
61500 58900 61700 58900 10 line
61700 59050 61700 58750 10 line
gsave
false false false false 208.000000 [(Vcc) ] 270 61750 59025 144.444443 text
grestore
grestore
gsave
60900 58800 61000 59000 10 line
61000 59000 61100 58800 10 line
61100 58800 61200 59000 10 line
61200 59000 61300 58800 10 line
60900 58800 60800 59000 10 line
60800 59000 60750 58900 10 line
60600 58900 60750 58900 10 line
61500 58900 61348 58900 10 line
61299 58800 61350 58900 10 line
grestore
gsave
false false false false 260.000000 [(R6) ] 0 60700 59100 180.555557 text
grestore
gsave
false false false false 260.000000 [(100) ] 0 61100 59100 180.555557 text
grestore
gsave
60400 58900 60400 58700 10 line
gsave
false true false false 208.000000 [(1) ] 270 60450 58750 144.444443 text
grestore
60400 58000 60400 58200 10 line
gsave
false false false false 208.000000 [(2) ] 270 60450 58150 144.444443 text
grestore
60600 58350 60200 58350 10 line
60400 58200 60400 58350 10 line
60400 58550 60400 58700 10 line
60600 58661 60500 58661 10 line
60549 58610 60549 58710 10 line
60200 58450 60600 58450 10 line
60600 58450 60600 58550 10 line
60600 58550 60200 58550 10 line
60200 58550 60200 58450 10 line
newpath
60400 58900
25
0 360 arc
fill
newpath
60400 58900
25
0 360 arc
fill
grestore
gsave
false false false false 260.000000 [(C3) ] 0 60700 58500 180.555557 text
grestore
gsave
60700 57900 60500 57900 10 line
60700 57800 60700 58000 10 line
60750 57855 60750 57945 10 line
60790 57880 60790 57920 10 line
grestore
gsave
57100 63800 56900 63800 10 line
gsave
false false false true 208.000000 [(1) ] 0 56950 63750 144.444443 text
grestore
56200 63800 56400 63800 10 line
gsave
false true false true 208.000000 [(2) ] 0 56350 63750 144.444443 text
grestore
56550 63600 56550 64000 10 line
56400 63800 56550 63800 10 line
56750 63800 56900 63800 10 line
56861 63600 56861 63700 10 line
56810 63651 56910 63651 10 line
56650 63600 56750 63600 10 line
56750 63600 56750 64000 10 line
56750 64000 56650 64000 10 line
56650 64000 56650 63600 10 line
grestore
gsave
false false false false 260.000000 [(C4) ] 0 56400 64100 180.555557 text
grestore
gsave
false false false false 260.000000 [(1uF) ] 0 56800 64100 180.555557 text
grestore
gsave
56000 63800 56200 63800 10 line
56000 63900 56000 63700 10 line
55950 63845 55950 63755 10 line
55910 63820 55910 63780 10 line
grestore
57100 62900 58000 62900 10 line
gsave
63450 63200 63600 63200 10 line
gsave
false false false false 208.000000 [(2) ] 270 63500 63300 144.444443 text
grestore
63200 63200 63301 63252 10 line
63201 63199 63302 63147 10 line
63200 63100 63000 63200 10 line
63000 63200 63200 63300 10 line
63200 63300 63000 63400 10 line
63000 63400 63200 63500 10 line
63200 63100 63000 63000 10 line
63000 63000 63100 62950 10 line
63100 62800 63100 62950 10 line
gsave
false false false false 208.000000 [(3) ] 270 62950 62900 144.444443 text
grestore
gsave
false false false false 260.000000 [(ccw) ] 270 63200 63100 180.555557 text
grestore
63100 63700 63100 63548 10 line
gsave
false false false false 208.000000 [(1) ] 270 62950 63600 144.444443 text
grestore
gsave
false false false false 260.000000 [(cw) ] 270 63200 63700 180.555557 text
grestore
63200 63499 63100 63550 10 line
63200 63200 63450 63200 10 line
grestore
gsave
false false false false 260.000000 [(R7) ] 0 62600 63300 180.555557 text
grestore
gsave
false false false false 260.000000 [(10K) ] 0 62600 63100 180.555557 text
grestore
62100 60500 64500 60500 10 line
62100 60800 63300 60800 10 line
63300 60800 63300 60200 10 line
63300 60200 64500 60200 10 line
62100 61100 63500 61100 10 line
63500 61100 63500 59900 10 line
63500 59900 64500 59900 10 line
62100 61400 63700 61400 10 line
63700 61400 63700 59600 10 line
63700 59600 64500 59600 10 line
64500 62600 63600 62600 10 line
63600 62600 63600 61700 10 line
63600 61700 62100 61700 10 line
64500 62300 63200 62300 10 line
63200 62300 63200 62000 10 line
63200 62000 62100 62000 10 line
64500 62000 63400 62000 10 line
63400 62000 63400 61900 10 line
63400 61900 63000 61900 10 line
63000 61900 63000 62300 10 line
63000 62300 62100 62300 10 line
gsave
64300 63500 64500 63500 10 line
64300 63600 64300 63400 10 line
64250 63545 64250 63455 10 line
64210 63520 64210 63480 10 line
grestore
gsave
63100 62600 63100 62800 10 line
63000 62600 63200 62600 10 line
63055 62550 63145 62550 10 line
63080 62510 63120 62510 10 line
grestore
gsave
63100 63700 63100 63900 10 line
62950 63900 63250 63900 10 line
gsave
false false false false 208.000000 [(Vcc) ] 0 62975 63950 144.444443 text
grestore
grestore
gsave
64500 63200 64300 63200 10 line
64300 63050 64300 63350 10 line
gsave
false false false false 208.000000 [(Vcc) ] 90 64250 63075 144.444443 text
grestore
grestore
64500 62900 63600 62900 10 line
63600 62900 63600 63200 10 line
gsave
57800 63500 58000 63400 10 line
58000 63400 57800 63300 10 line
57800 63300 58000 63200 10 line
58000 63200 57800 63100 10 line
57800 63500 58000 63600 10 line
58000 63600 57900 63650 10 line
57900 63800 57900 63650 10 line
57900 62900 57900 63052 10 line
57800 63101 57900 63050 10 line
newpath
57900 62900
25
0 360 arc
fill
newpath
57900 62900
25
0 360 arc
fill
grestore
gsave
false false false false 260.000000 [(R8) ] 0 57400 63400 180.555557 text
grestore
gsave
false false false false 260.000000 [(10K) ] 0 57400 63200 180.555557 text
grestore
gsave
57900 63800 57900 64000 10 line
57750 64000 58050 64000 10 line
gsave
false false false false 208.000000 [(Vcc) ] 0 57775 64050 144.444443 text
grestore
grestore
57100 62900 57100 63800 10 line
gsave
54900 61100 54900 61300 10 line
54750 61300 55050 61300 10 line
gsave
false false false false 208.000000 [(Vcc) ] 0 54775 61350 144.444443 text
grestore
grestore
60600 58900 59700 58900 10 line
60500 57900 59700 57900 10 line
60400 57900 60400 58000 10 line
59700 58400 60000 58400 10 line
60000 58400 60000 59500 10 line
60000 59500 62300 59500 10 line
57500 62100 57500 61700 10 line
57500 61700 58000 61700 10 line
55300 62800 55300 62100 10 line
55600 58700 57400 58700 10 line
gsave
55600 58500 55600 58700 10 line
55500 58500 55700 58500 10 line
55555 58450 55645 58450 10 line
55580 58410 55620 58410 10 line
grestore
62300 60200 62100 60200 10 line
gsave
false false false false 260.000000 [(TSOP1738) ] 0 58300 57400 180.555557 text
grestore
gsave
false false false false 260.000000 [(4.7uF) ] 0 60700 58300 180.555557 text
grestore
gsave
64300 59000 64500 59000 10 line
64300 59100 64300 58900 10 line
64250 59045 64250 58955 10 line
64210 59020 64210 58980 10 line
grestore
gsave
64500 59300 64300 59300 10 line
64300 59150 64300 59450 10 line
gsave
false false false false 208.000000 [(Vcc) ] 90 64250 59175 144.444443 text
grestore
grestore
gsave
false false false false 260.000000 [(1602 HD44780 compatible) ] 0 64800 58400 180.555557 text
grestore
gsave
false false false false 260.000000 [(* LCD is optional) ] 0 64800 58200 180.555557 text
grestore
newpath
56500 60800
25
0 360 arc
fill
newpath
56500 60800
25
0 360 arc
fill
newpath
56500 60800
25
0 360 arc
fill
newpath
56500 60800
25
0 360 arc
fill
newpath
55600 60500
25
0 360 arc
fill
newpath
55600 60500
25
0 360 arc
fill
newpath
55600 60500
25
0 360 arc
fill
newpath
56500 58700
25
0 360 arc
fill
newpath
56500 58700
25
0 360 arc
fill
newpath
56500 60800
25
0 360 arc
fill
newpath
56500 60800
25
0 360 arc
fill
newpath
56400 62100
25
0 360 arc
fill
newpath
56400 62100
25
0 360 arc
fill
newpath
56400 62800
25
0 360 arc
fill
newpath
56400 62800
25
0 360 arc
fill
newpath
56400 62100
25
0 360 arc
fill
newpath
56400 62800
25
0 360 arc
fill
newpath
55300 62500
25
0 360 arc
fill
newpath
55300 62500
25
0 360 arc
fill
newpath
60400 58900
25
0 360 arc
fill
newpath
60400 58900
25
0 360 arc
fill
newpath
57900 62900
25
0 360 arc
fill
newpath
63700 59600
25
0 360 arc
fill
newpath
63700 59600
25
0 360 arc
fill
newpath
57900 62900
25
0 360 arc
fill
newpath
57900 62900
25
0 360 arc
fill
newpath
60400 58900
25
0 360 arc
fill
newpath
60400 57900
25
0 360 arc
fill
newpath
60400 57900
25
0 360 arc
fill
newpath
60400 57900
25
0 360 arc
fill
newpath
55300 62500
25
0 360 arc
fill
newpath
55600 58700
25
0 360 arc
fill
newpath
56500 58700
25
0 360 arc
fill
showpage
%%End
